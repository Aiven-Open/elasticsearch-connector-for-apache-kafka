/*
 * Copyright 2019 - 2021 Aiven Oy
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {

    // https://docs.gradle.org/current/userguide/java_library_plugin.html
    id "java-library"

    // https://docs.gradle.org/current/userguide/checkstyle_plugin.html
    id "checkstyle"

    // https://docs.gradle.org/current/userguide/jacoco_plugin.html
    id "jacoco"

    // https://docs.gradle.org/current/userguide/distribution_plugin.html
    id "distribution"

    // https://docs.gradle.org/current/userguide/publishing_maven.html
    id "maven-publish"

}

repositories {
    jcenter()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava {
    options.compilerArgs = ['-Xlint:all', '-Werror']
}

checkstyle {
    toolVersion "8.29"
    configDir rootProject.file("checkstyle/")
}

jacoco {
    toolVersion = "0.8.5"
}

distributions {
    main {
        contents {
            from jar
            from configurations.runtimeClasspath

            into("/") {
                from projectDir
                include "version.txt", "README*", "LICENSE*", "NOTICE*", "licenses/"
                include "config/"
            }
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            // Defaults, for clarity
            groupId = getGroup()
            artifactId = getName()
            version = getVersion()

            pom {
                name = "Aiven Kafka Elasticsearch connector"
                description = "A Kafka Elasticsearch sink connector for copying data from Kafka to Elasticsearch."
                url = "https://aiven.io"
                organization {
                    name = "Aiven Oy"
                    url = "https://aiven.io"
                }
                licenses {
                    license {
                        name = "Apache License 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.html"
                        distribution = "repo"

                    }
                }
                scm {
                    connection = "scm:git:git://github.com/aiven/aiven-kafka-connect-elasticsearch.git"
                    developerConnection = "scm:git:git@github.com:aiven/aiven-kafka-connect-elasticsearch.git"
                    url = "https://github.com/aiven/aiven-kafka-connect-elasticsearch.git"
                    tag = "HEAD"
                }
            }
        }
    }
}

ext {
    kafkaVersion = "2.2.0"
    slf4jVersion = "1.7.25"
    elasticSearchVersion = "2.4.1"
    luceneVersion = "5.5.2"
    jestVersion = "6.3.1"
}

processResources {
    filesMatching('aiven-kafka-connect-elasticsearch-version.properties') {
        expand(version: version)
    }
}

dependencies {
    compileOnly "org.apache.kafka:connect-api:$kafkaVersion"
    compileOnly "org.apache.kafka:connect-json:$kafkaVersion"

    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "io.searchbox:jest:$jestVersion"

    testImplementation("junit:junit:4.12") {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "org.mockito:mockito-core:2.23.0"
    testImplementation "org.mockito:mockito-all:1.10.19"

    testImplementation "org.apache.kafka:connect-api:$kafkaVersion"
    testImplementation "org.apache.kafka:connect-json:$kafkaVersion"
    testImplementation "org.apache.lucene:lucene-test-framework:$luceneVersion"
    testImplementation "com.fasterxml.jackson.core:jackson-core:2.8.1"
    testImplementation "com.fasterxml.jackson.core:jackson-databind:2.8.1"
    testImplementation "com.fasterxml.jackson.core:jackson-annotations:2.8.1"
    testImplementation "org.elasticsearch:elasticsearch:$elasticSearchVersion:tests"
    testImplementation "org.elasticsearch:elasticsearch:$elasticSearchVersion"
    testImplementation "org.apache.lucene:lucene-expressions:$luceneVersion"
    testRuntime "org.slf4j:slf4j-log4j12:$slf4jVersion"
}

test {

    //we do not need to check classpath hell for testing
    systemProperty "tests.jarhell.check", "false"

    //tests.security.manager is true all ElasticsearchSinkTestBase aware test hang
    systemProperty "tests.security.manager", "false"

}
